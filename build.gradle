
plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.springframework.boot' version '3.0.2'
}

group = 'org.alan'
version = '2.0.0'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {


    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '3.0.6'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // validation
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '8.0.0.Final'

    // doc
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.0.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
    implementation group: 'io.springfox', name: 'springfox-bean-validators', version: '3.0.0'
    implementation group: 'io.swagger', name: 'swagger-annotations', version: '1.6.10'

    // xml
    implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.0'

    //security
    compileOnly 'org.springframework.boot:spring-boot-starter-security'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
    implementation 'org.springframework.security.oauth:spring-security-oauth2:2.5.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation group: 'org.springframework.security', name: 'spring-security-config', version: '6.0.2'

    // database
    implementation 'mysql:mysql-connector-java'
    testImplementation group: 'com.h2database', name: 'h2', version: '2.1.214'

    //jpa
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '3.0.3'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // queryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

    // development tool
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.jar {
    manifest {
        attributes["Main-Class"] = "com.workingbee.ohnong.OhnongApplication.java"
    }
}

tasks.bootJar {
    mainClass = 'com.workingbee.ohnong.OhnongApplication'
}

def generated = 'src/main/generated'

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

sourceSets {
    main.java.srcDirs += [ generated ]
}

clean {
    delete file(generated)
}
